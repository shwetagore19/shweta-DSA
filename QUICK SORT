#include <stdio.h>

// Function prototype
void QuickSort(int number[], int first, int last);

int main() {
    int number[6] = {29, 10, 14, 37, 13, 25};
    int i;
    int n = 6;

    printf("Original array:\n");
    for(i = 0; i < n; i++) {
        printf("%d ", number[i]);
    }
    printf("\n");

    QuickSort(number, 0, n - 1);

    printf("Sorted array:\n");
    for(i = 0; i < n; i++) {
        printf("%d ", number[i]);
    }
    printf("\n");

    return 0;
}

void QuickSort(int number[], int first, int last) {
    int i, j, pivot, temp;
    if (first < last) {
        pivot = first;
        i = first;
        j = last;

        while (i < j) {
            while (number[i] <= number[pivot] && i < last)
                i++;

            while (number[j] > number[pivot])
                j--;

            if (i < j) {
                temp = number[i];
                number[i] = number[j];
                number[j] = temp;
            }
        }

        temp = number[pivot];
        number[pivot] = number[j];
        number[j] = temp;

        QuickSort(number, first, j - 1);
        QuickSort(number, j + 1, last);
    }
}
